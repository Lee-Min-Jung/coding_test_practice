import java.io.*;
import java.util.*;

// D[N]을 N명일 때 선물을 교환할 수 있는 경우의 수로 정의하자
// 1번 학생이 2번 학생에게 선물을 주고 2번 학생이 1번 학생에 선물을 줬다면 우리는 D[N-2] 번의 경우의 수만 구하면 된다(이미 2명은 교환 완료) 나머지 교환은 무조건 n-2번 발생
// 1번 학생이 2번 학생에게 선물을 주고, 2번 학생은 1번 학생에게 선물을 주지 않았다면 우리는 D[N-1] 번의 경우의 수만 구하면 된다(이미 1명은 교환 완료) 나머지 교환은 무조건 n-1번 발생
// 즉 1번 학생이 선물을 줬을 때 D[N-2] 를 구하거나 D[N-1]을 구하거나 하면 된다 이는 D[N-2] + D[N-1]이다
// 그런데 1번 학생이 선물을 줄 학생을 선택할 수 있는 횟수는 본인 제외 N-1번이다.
// 위에서 1번이라고 한 것은 이해를 돕기 위해 가정한 것일 뿐 모든 학생에게 다 발생가능한 거다
// 따라서 D[N] = (D[N-2] + D[N-1]) * n-1
// 괄호 안 더하기는 특정 학생이 다른 학생에게 선물을 줬을 때 구해야 하는 경우를 의미하고, n-1을 곱하는 것은 다른 학생이 n-1번 가능하니 그걸 곱해준 것이다

public class Main {


    public static void main(String[] args) throws IOException {
        // 참가자 수 입력
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();

        // D 배열
        long[] D = new long[1000001];
        D[1] = 0;
        D[2] = 1;
        for(int i = 3; i<=N; i++){
            D[i] = (i-1) * (D[i-1] + D[i-2]) % 1000000000;
        }

        // 정답 출력
        System.out.println(D[N]);


    }


}




